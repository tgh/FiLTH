<?xml version="1.0"?>

<project name="filth" xmlns:ivy="antlib:org.apache.ivy.ant" basedir="." default="usage">

    <!-- ================================================================= -->
    <!-- Properties and classpaths -->
    <property environment="env"/>
    
    <property file="build.properties"/>
    
    <property name="src.dir" value="src/main/java"/>
    <property name="test.dir" value="src/test"/>
    <property name="web.dir" value="web/"/>
    <property name="build.dir" value="target"/>
    <property name="name" value="filth"/>
    <property name="resources.dir" value="src/main/resources"/>

    <path id="master-classpath">
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
        <!-- include servlet API classes: -->
        <fileset dir="${tomcat.lib.dir}">
            <include name="servlet*.jar"/>
        </fileset>
        <pathelement path="${resources.dir}"/>
        <pathelement path="${build.dir}"/>
    </path>
    
    <!-- ================================================================= -->
    <!-- Ivy -->
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement path="${build.lib.dir}/ant-contrib.jar"/>
        </classpath>
    </taskdef>

    <taskdef name="ivy-configure" classname="org.apache.ivy.ant.IvyConfigure"/>
    <taskdef name="ivy-resolve" classname="org.apache.ivy.ant.IvyResolve"/>
    <taskdef name="ivy-retrieve" classname="org.apache.ivy.ant.IvyRetrieve"/>
    <taskdef name="ivy-deliver" classname="org.apache.ivy.ant.IvyDeliver"/> 
    <taskdef name="ivy-publish" classname="org.apache.ivy.ant.IvyPublish"/>
    
    <target name="ivy-resolve" description="Get dependencies">
        <ivy:configure />
        
        <ivy:resolve file="${ivy.dep.file}" conf="${ivy.configurations}" />
        
        <ivy:retrieve pattern="${ivy.retrieve.pattern}" conf="${ivy.configurations}" />
        <echo message="ivy.dep.file: ${ivy.dep.file}"/>
        <echo message="ivy.configurations: ${ivy.configurations}"/>
        <echo message="ivy.retrieve.pattern: ${ivy.retrieve.pattern}"/>
    </target>

    <!-- ================================================================= -->
    <!-- Tomcat -->
    <target name="tomcat-start" description="Start tomcat">
        <exec executable="bash" failonerror="true">
            <arg value="${tomcat.home.dir}/bin/catalina.sh"/>
            <arg value="start"/>
        </exec>
    </target>
    
    <target name="tomcat-debug-start" description="Start tomcat with debugging turned on">
        <exec executable="bash" failonerror="true">
            <arg value="${tomcat.home.dir}/bin/catalina.sh"/>
            <arg line="jpda start"/>
            <env key="JPDA_ADDRESS" value="${tomcat.jpda.address}"/>
            <!-- <env key="JAVA_OPTS" value="${tomcat.java.opts}"/> --><!-- uncomment if you want to use specific options for the jvm -->
        </exec>
    </target>
    
    <target name="tomcat-stop" description="Stop tomcat">
        <exec executable="bash" failonerror="true">
            <arg value="${tomcat.home.dir}/bin/catalina.sh"/>
            <arg value="stop"/>
        </exec>
    </target>

    <!-- ================================================================= -->
    <!-- Build targets -->
    <target name="usage">
        <echo message=""/>
        <echo message="${name} build file"/>
        <echo message="-----------------------------------"/>
        <echo message=""/>
        <echo message="Available targets are:"/>
        <echo message=""/>
        <echo message="build     --> Build the application"/>
        <echo message="deploy    --> Deploy application as directory"/>
        <echo message="deploywar --> Deploy application as a WAR file"/>
        <echo message="install   --> Install application in Tomcat"/>
        <echo message="reload    --> Reload application in Tomcat"/>
        <echo message="start     --> Start Tomcat application"/>
        <echo message="stop      --> Stop Tomcat application"/>
        <echo message="list      --> List Tomcat applications"/>
        <echo message=""/>
    </target>

    <target name="build" description="Compile main source tree java files">
        <mkdir dir="${build.dir}"/>
        <javac destdir="${build.dir}" source="1.8" target="1.8" debug="true"
               deprecation="false" optimize="false" failonerror="true">
            <src path="${src.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
    </target>

    <!-- ================================================================= -->
    <!-- Deploy targets -->
    <target name="deploy" depends="build" description="Deploy application">
        <copy todir="${tomcat.deploy.dir}/${name}" preservelastmodified="true">
            <fileset dir="${web.dir}">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <copy todir="${tomcat.deploy.dir}/${name}/WEB-INF/classes">
            <fileset dir="${build.dir}">
                <include name="**/*.class"/>
            </fileset>
        </copy>
    </target>

    <target name="deploywar" depends="build" description="Deploy application as a WAR file">
        <war destfile="${name}.war" webxml="${web.dir}/WEB-INF/web.xml">
            <fileset dir="${web.dir}">
                <include name="**/*.*"/>
            </fileset>
        </war>
        <copy todir="${tomcat.deploy.dir}" preservelastmodified="true">
            <fileset dir=".">
                <include name="*.war"/>
            </fileset>
        </copy>
    </target>
    
    <!-- ================================================================= -->
    <!-- Test targets -->
    <target name="buildtests" description="Compile test tree java files">
        <mkdir dir="${build.dir}"/>
        <javac destdir="${build.dir}" source="1.8" target="1.8" debug="true"
            deprecation="false" optimize="false" failonerror="true">
            <src path="${test.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
    </target>
    
    <target name="tests" depends="build, buildtests" description="Run tests">
        <junit printsummary="on"
            fork="false"
            haltonfailure="false"
            failureproperty="tests.failed"
            showoutput="true">
            <classpath refid="master-classpath"/>
            <formatter type="brief" usefile="false"/>
            
            <batchtest>
                <fileset dir="${build.dir}">
                    <include name="**/*Test.*"/>
                </fileset>
            </batchtest>
        </junit>
        
        <fail if="tests.failed">
            tests.failed=${tests.failed}
            ***********************************************************
            ***********************************************************
            ****  One or more tests failed!  Check the output ...  ****
            ***********************************************************
            ***********************************************************
        </fail>
    </target>

</project>