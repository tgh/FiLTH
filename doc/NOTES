WHERE LEFT OFF
---------------
- creating a more agile environment...
  - create a new spreadsheet for stories based on tickets.ods
    - add columns for level (1: high, 2: medium, 3:low, 4:nice-to-have low,
      5:nice-to-have medium, 6:nice-to-have high), points estimated, tasks #
      (e.g. if Story #21, then tesk 21.1, 21.2, 21.3, etc)
  - description will be like wgen story format: "As ... I would like ... " etc
    - S19 description: As an end user, I would like the movie results of a
      search in filth to be a URL link to the movie's IMDB page.
  - need to doc bug statuses, bug levels, story statuses, etc
  - create a bug spreadsheet
    - b1
      - status: O
      - level: 3
      - description: For whatever reason, Python does not handle unicode well.
        This kind of error happens frequently.  This was a simple update of a
        title of a movie, and dealt only with ascii characters, but it still
        barfed on unicode?
      - example:

        was updating "Hannah" to "Hanna" and received this output:

        (21:49)tgh:~/Projects/FiLTH/scripts[master]$ ./movie.sh 

          Did not find <"Hanna" (2011) **½ [PG-13] USA> in the database.
          Is this an update? (y/n) y

          What is the id of the movie? 704
          Traceback (most recent call last):
            File "/home/tgh/Projects/FiLTH/scripts/movie2sql.py", line 230, in <module>
              insert = not checkForUpdate(title, year, stars, mpaa, country.replace("'",""))
            File "/home/tgh/Projects/FiLTH/scripts/movie2sql.py", line 140, in checkForUpdate
              search  = "'{0}', {1}, '{2}', '{3}', '{4}'".format(origTitle.encode('utf-8').replace("'","''").replace("/","\/"), origYear, origStars.encode('utf-8').replace("*","\*"), origMpaa, origCountry)
          UnicodeDecodeError: 'ascii' codec can't decode byte 0xc2 in position 2: ordinal not in range(128)


- add "Black-and-White"(tid=32) tag to 8 1/2 (mid=4)
- add "New York" tag to 13 Going on 30 (mid=9)
- add "Odd" (51) to "3 Women" (1)
- add "Odd" (51) to "12 Monkeys" (6)
- add "Psychological" (46) to "12 Monkeys" (6) ?
- add "Series" (55) to "21 Up" (12)
- add "Series" (55) to "28 Up" (17)
- add "Series" (55) to "35 Up" (19)
- add "Series" (55) to "42 Up" (20)
- add "Remake" (57) to 3:10 to Yuma (2)
- add "Based-on-book" (58) to 127 Hours (21)
- add "Based-on-short-story" (59) to 2001 (25)
- add "Based-on-short-story" (59) to AI (27)
- add "Based-on-book" (58) to About a Boy (28)
- add "Based-on-book" (58) to Adaptation (36)
- add "Based-on-short-story" (59) to The Adjustment Bureau (37)
- add "Based-on-book" (58) to The Adventures of Robin Hood (40)
- add "Based-on-book" (58) to 25th Hour (14)
- add "Based-on-book" (58) to About Schmidt (29)
- add "Based-on-book" (58) to The Accidental Tourist (32)
- add "Based-on-book" (58) to Adventures of Baron (38)
- add "Based-on-book" (58) to Affliction (41)
- add "Based-on-book" (58) to African Queen (42)
- add "Based-on-book" (58) to The Age of Innocence (45)
- add "Based-on-play" (60) to Alfie (52)
- add "Based-on-book" (58) to Alice in Wonderland (57)
- add "Black-and-white" (32) to All Quiet on the Western Front (69)
- add "Music" (61) to All That Jazz (70)
- add "Music" (61) to Almost Famous (73)
- add "Music" (61) to 24-Hour Party People (13)
- add "Disney" (69) to Alice in Wonderland (57)
- add "Disney" (69) to Atlantis (124)
- add "Collection-of-short-films" (70) to Aria (115)
- add "Espionage" (76) to all Austin Powers movies
- add "Mafia" (77) to Analyze This

- Gerry should be 2002
- The Station Agent should probably be ***1/2, not ****
- sorting on star_rating has undesired results now that it is test rather than
  integer.  use "C" locale???
- A Christmas Carol has an extra comma in the pdf?
- change Ed Wood to ***
- On Golden Pond should be ****
- Bourne Ultimatum should be The Bourne Ultimatum


NEEDS
------
- all entity tables need to be inserted before any relationship tables


IDEAS/THOUGHTS
---------------
- change list_contains pkey? (I'm sure there's going to be some lists that have
  the same movie on it 2 or more times...)

- for the web app, the lists will be pdf files linked from the home page (?)

- shouldn't contain accented special characters for names, movie titles, etc.
  because typing in a search query in the front-end won't find them if not
  given (just using non-accented characters).  Unless search by pull-down menu?
  EDIT: there are search mechanisms (at least in Postgres) that WILL catch these
  accented characters I think...

- add category to oscar_given_to table and make it a foreign key to the
  oscar table (like country is to movie) to eliminate another join.  This will
  add significant storage, however. (ditto for tyler_given_to)

- rather than run psql straight on oscar_given_to.sql, should drop_and_...sh
  scripts run OscarParser first, then run oscar_given_to.sql?

- with regard to ticket #19 (links to imdb), you could use this format for the
  URL: http://www.imdb.com/search/title?release_date=[year-1],[year+1]&title=[title with words separated by "%20"]

  for example, The Shawshank Redemption:

  http://www.imdb.com/search/title?release_date=1993,1995&title=The%20Shawshank%20Redemption

  There are more attributes to narrow the search, such as genres, MPAA rating,
  etc but this should be enough.  Besides, some of the MPAA ratings in filth is
  a little different than in IMDB (e.g. those films that were made before MPAA
  existed), and which genres in filth would be used?

  However, this still does not take you directly to the movie page, but a search
  results page, which is what I'm trying to avoid.


HELPFUL HINTS/REMINDERS
------------------------
- it takes 2 bytes to make ½ character: '\xc2\xbd'

- password for filth database: 0o9..

- to connect to the database with psql:

  $ psql -U postgres -d filth

- compile haskell just like common gcc: ghc -o [binary] [source]
- example of full text search in postgres:

  SELECT mid, title FROM movie WHERE to_tsquery('Dr.&Strangelove&Bomb')
  @@ to_tsvector(title);
  -- the '@@' operator means 'matches'
  -- to_tsquery has special characters:
  --  & = and
  --  | = or
  --  ! = not

- example of search for name with accented character using the created function
  to_ascii():

  select * from crew_person where f_name =
  to_ascii(convert_to('Penélope', 'latin1'), 'latin1');

- crew persons with one name (e.g. Cher, Costa-Gavras) have their names in the
  db as last names

- in Postgres, the output of an insert is:
  "INSERT <OID of the new row> <the number of rows inserted>"
  e.g.
  INSERT 0 1

- to create the db schema diagram
  - open DbVis
  - right click on Filth (in the left window panel) -> connect
  - expand the "filth" db (by clicking the little lever icon left of "filth")
  - expand "public"
  - click "TABLE"
  - in the main window frame, click "References" tab
  - arrange diagram how you want
  - zoom in to the level of resolution you want
  - click the export button below and to the left of "References" tab

- to start apache:

  $ apachectl start
  
  - (apachectl is found in ~/Installed_Programs/apache_2.4/bin)
  - everything is ok if no output
  - ($ apachectl stop) to stop
  - ~/Installed_Programs/apache_2.4/logs/httpd.pid contains the pid of httpd
  - apache logs found in ~/Installed_Programs/apache_2.4/logs
  - config file: ~/Installed_Programs/apache_2.4/conf/httpd.conf
  - using port 2121


REFERENCES
-----------
- csv file of oscar history found here:
  http://www.aggdata.com/awards/oscar
  from here:
  http://www.bloggersblog.com/blog/224081
- data from IMDB can be retrieved directly! : http://www.imdb.com/interfaces/


TOOLS USED/TRIED OUT
---------------------
* denotes possible requirements for end user
- Dia (diagram tool--used for E-R diagram for database schema)
- Git (for version control)
- Postgres* (database)
- pgAdmin III (front-end application for Postgres)
- MySQL (database)
- MySQL Workbench (front-end application for MySQL)
- wxGlade (GUI builder for Python)
- BoaConstructor (GUI builder for Python)
- NetBeans GUI builder (GUI builder for Java)
- antiword (movie shell script)
- sed (shell scripts)
- fgrep (oscarGivenTo shell script)
- ghc (Haskell compiler)
- gcc (C compiler)
- python* (interpreter for Python)
- LaTeX* (typesetting tool--for dynamically creating pdf files)
- dvipdf* (used with LaTex for converting dvi files to pdf files)
- Photoshop (used to create FiLTH logo)
- Qt Creator
- sqlite3
- Django
- SQLAlchemy
- dbvis (creating db schema diagram)


LANGUAGES USED
---------------
- bash shell scripting
- Python
- Java
- C
- Haskell
- PHP
- SQL
- HTML
- LaTeX


SCRATCH
--------
