WHERE LEFT OFF
---------------
- was updating "Hannah" to "Hanna" and received this output:

  (21:49)tgh:~/Projects/FiLTH/scripts[master]$ ./movie.sh 

  Did not find <"Hanna" (2011) **½ [PG-13] USA> in the database.
  Is this an update? (y/n) y

  What is the id of the movie? 704
  Traceback (most recent call last):
    File "/home/tgh/Projects/FiLTH/scripts/movie2sql.py", line 230, in <module>
      insert = not checkForUpdate(title, year, stars, mpaa, country.replace("'",""))
    File "/home/tgh/Projects/FiLTH/scripts/movie2sql.py", line 140, in checkForUpdate
      search  = "'{0}', {1}, '{2}', '{3}', '{4}'".format(origTitle.encode('utf-8').replace("'","''").replace("/","\/"), origYear, origStars.encode('utf-8').replace("*","\*"), origMpaa, origCountry)
  UnicodeDecodeError: 'ascii' codec can't decode byte 0xc2 in position 2: ordinal not in range(128)

- fixing unicode issues with movie2sql.py and models.py...
- need scripts to parse filmographies for worked_on table

- The Magdalene Sisters not in database?
- Gerry should be 2002
- Old School not in db?
- The Station Agent should probably be ***1/2, not ****
- sorting on star_rating has undesired results now that it is test rather than
  integer.  use "C" locale???


NEEDS
------
- all entity tables need to be inserted before any relationship tables


IDEAS/THOUGHTS
---------------
- change list_contains pkey? (I'm sure there's going to be some lists that have
  the same movie on it 2 or more times...)

- for the web app, the lists will be pdf files linked from the home page (?)

- shouldn't contain accented special characters for names, movie titles, etc.
  because typing in a search query in the front-end won't find them if not
  given (just using non-accented characters).  Unless search by pull-down menu?
  EDIT: there are search mechanisms (at least in Postgres) that WILL catch these
  accented characters I think...

- add category to oscar_given_to table and make it a foreign key to the
  oscar table (like country is to movie) to eliminate another join.  This will
  add significant storage, however. (ditto for tyler_given_to)

- rather than run psql straight on oscar_given_to.sql, should drop_and_...sh
  scripts run OscarParser first, then run oscar_given_to.sql?

- with regard to ticket #19 (links to imdb), you could use this format for the
  URL: http://www.imdb.com/search/title?release_date=[year-1],[year+1]&title=[title with words separated by "%20"]

  for example, The Shawshank Redemption:

  http://www.imdb.com/search/title?release_date=1993,1995&title=The%20Shawshank%20Redemption

  There are more attributes to narrow the search, such as genres, MPAA rating,
  etc but this should be enough.  Besides, some of the MPAA ratings in filth is
  a little different than in IMDB (e.g. those films that were made before MPAA
  existed), and which genres in filth would be used?

  However, this still does not take you directly to the movie page, but a search
  results page, which is what I'm trying to avoid.


HELPFUL HINTS/REMINDERS
------------------------
- password for filth database: 0o9..

- to connect to the database with psql:

  $ psql -U postgres -d filth

- compile haskell just like common gcc: ghc -o [binary] [source]
- example of full text search in postgres:

  SELECT mid, title FROM movie WHERE to_tsquery('Dr.&Strangelove&Bomb')
  @@ to_tsvector(title);
  -- the '@@' operator means 'matches'
  -- to_tsquery has special characters:
  --  & = and
  --  | = or
  --  ! = not

- example of search for name with accented character using the created function
  to_ascii():

  select * from crew_person where f_name =
  to_ascii(convert_to('Penélope', 'latin1'), 'latin1');

- crew persons with one name (e.g. Cher, Costa-Gavras) have their names in the
  db as last names

- in Postgres, the output of an insert is:
  "INSERT <OID of the new row> <the number of rows inserted>"
  e.g.
  INSERT 0 1


REFERENCES
-----------
- csv file of oscar history found here:
  http://www.aggdata.com/awards/oscar
  from here:
  http://www.bloggersblog.com/blog/224081
- data from IMDB can be retrieved directly! : http://www.imdb.com/interfaces/


TOOLS USED/TRIED OUT
---------------------
* denotes possible requirements for end user
- Dia (diagram tool--used for E-R diagram for database schema)
- Git (for version control)
- Postgres* (database)
- pgAdmin III (front-end application for Postgres)
- MySQL (database)
- MySQL Workbench (front-end application for MySQL)
- wxGlade (GUI builder for Python)
- BoaConstructor (GUI builder for Python)
- NetBeans GUI builder (GUI builder for Java)
- antiword (movie shell script)
- sed (shell scripts)
- fgrep (oscarGivenTo shell script)
- ghc (Haskell compiler)
- gcc (C compiler)
- python* (interpreter for Python)
- LaTeX* (typesetting tool--for dynamically creating pdf files)
- dvipdf* (used with LaTex for converting dvi files to pdf files)
- Photoshop (used to create FiLTH logo)
- Qt Creator
- sqlite3
- Django
- SQLAlchemy


LANGUAGES USED
---------------
- bash shell scripting
- Python
- Java
- C
- Haskell
- PHP
- SQL
- HTML
- LaTeX


SCRATCH
--------
